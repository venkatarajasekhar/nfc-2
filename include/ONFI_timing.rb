#!/usr/bin/env ruby

require "yaml"

CLOCK = 33.33           # clock in Mhz
PULSE = 1000 / CLOCK    # pulse width

# Asynchronous Timing
onfi = File.open( 'ONFI_timing.yaml' ) { |yf| YAML::load( yf ) }

File.open( 'ONFI_timing.h', 'w' ) do |hf|
  # append the following text till ENDS
  hf.write <<ENDS
/* DON'T EDIT - This file is generated by running "ONFI_timing.rb" */

#ifndef __INCLUDE_ONFI_TIMING_H
#define __INCLUDE_ONFI_TIMING_H


/*
 * Asynchronous ONFI timing modes
 *  System Clock = #{CLOCK}Mhz
 *  Pulse Width  = #{PULSE}ns.
 *
 *                          Mode  0   1   2   3   4   5
 *======================================================*/
ENDS

  onfi.sort.each do |key, value|
    if value.is_a? Array
      vstr = " %2d, %2d, %2d, %2d, %2d, %2d" % value.map { |n| (n / PULSE).ceil }
      hf.write "static const uint8_t %-5s[] = {#{vstr}};\n" % key
    end
  end

  hf.write "\n// Constant values for all modes.\n"

  onfi.each do |key, value|
    if not value.is_a? Array
      hf.write "#define %-15s %6d\n" % [key, (value / PULSE)]
    end
  end

  # append the following text till ENDS
  hf.write <<ENDS


#endif  // __INCLUDE_ONFI_TIMING_H
ENDS

end
